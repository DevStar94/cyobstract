#!/bin/env python
#
# Information Discovery
# 
# Copyright 2018 Carnegie Mellon University. All Rights Reserved.
# 
# NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING
# INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON
# UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR
# IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF
# FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS
# OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
# MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT,
# TRADEMARK, OR COPYRIGHT INFRINGEMENT.
#
# Released under a BSD-style license, please see LICENSE.txt or contact
# permission@sei.cmu.edu for full terms.
#
# [DISTRIBUTION STATEMENT A] This material has been approved for public
# release and unlimited distribution. Please see Copyright notice for
# non-US Government use and distribution.
#
# CERT is registered in the U.S. Patent and Trademark Office by
# Carnegie Mellon University.
#
# DM18-0345

# PURPOSE
# Attempt to guess the character encoding of all entries in the
# database and report their frequency counts.

from __future__ import print_function

from chardet import detect

import smoke
from smoke import db

config = smoke.config()

# this is in order to avoid decoding into utf-8 (ugly)
db.driver().connect().text_factory = bytes

encodings = {}

for iid in db.fetch_iids():
    txt = db.fetch_entry(iid.decode(encoding='utf-8'))
    if not txt:
        continue
    res = detect(txt)
    enc = res["encoding"]
    encodings[enc] = encodings.get(enc, 0) + 1

for cnt, enc in \
        reversed(sorted((cnt, enc) for enc, cnt in encodings.items())):
    print(cnt, enc)
